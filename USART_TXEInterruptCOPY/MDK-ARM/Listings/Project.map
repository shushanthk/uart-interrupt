Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    system_hk32f030xmxxa.o(.text.SystemInit) refers to system_hk32f030xmxxa.o(.text.SetSysClock) for SetSysClock
    system_hk32f030xmxxa.o(.ARM.exidx.text.SystemInit) refers to system_hk32f030xmxxa.o(.text.SystemInit) for [Anonymous Symbol]
    system_hk32f030xmxxa.o(.text.SetSysClock) refers to system_hk32f030xmxxa.o(.text.SetSysClockToHSI) for SetSysClockToHSI
    system_hk32f030xmxxa.o(.ARM.exidx.text.SetSysClock) refers to system_hk32f030xmxxa.o(.text.SetSysClock) for [Anonymous Symbol]
    system_hk32f030xmxxa.o(.text.SystemCoreClockUpdate) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    system_hk32f030xmxxa.o(.text.SystemCoreClockUpdate) refers to system_hk32f030xmxxa.o(.data.SystemCoreClock) for SystemCoreClock
    system_hk32f030xmxxa.o(.text.SystemCoreClockUpdate) refers to hk32f030xmxxa_rcc.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_hk32f030xmxxa.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_hk32f030xmxxa.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_hk32f030xmxxa.o(.ARM.exidx.text.SetSysClockToHSI) refers to system_hk32f030xmxxa.o(.text.SetSysClockToHSI) for [Anonymous Symbol]
    keil_startup_hk32f030xmxxa.o(RESET) refers to keil_startup_hk32f030xmxxa.o(STACK) for __initial_sp
    keil_startup_hk32f030xmxxa.o(RESET) refers to keil_startup_hk32f030xmxxa.o(.text) for Reset_Handler
    keil_startup_hk32f030xmxxa.o(RESET) refers to hk32f030xmxxa_it.o(.text.NMI_Handler) for NMI_Handler
    keil_startup_hk32f030xmxxa.o(RESET) refers to hk32f030xmxxa_it.o(.text.HardFault_Handler) for HardFault_Handler
    keil_startup_hk32f030xmxxa.o(RESET) refers to hk32f030xmxxa_it.o(.text.SVC_Handler) for SVC_Handler
    keil_startup_hk32f030xmxxa.o(RESET) refers to hk32f030xmxxa_it.o(.text.PendSV_Handler) for PendSV_Handler
    keil_startup_hk32f030xmxxa.o(RESET) refers to hk32f030xmxxa_it.o(.text.SysTick_Handler) for SysTick_Handler
    keil_startup_hk32f030xmxxa.o(RESET) refers to hk32f030xmxxa_it.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    keil_startup_hk32f030xmxxa.o(.text) refers to system_hk32f030xmxxa.o(.text.SystemInit) for SystemInit
    keil_startup_hk32f030xmxxa.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    hk32f030xmxxa_it.o(.ARM.exidx.text.NMI_Handler) refers to hk32f030xmxxa_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    hk32f030xmxxa_it.o(.ARM.exidx.text.HardFault_Handler) refers to hk32f030xmxxa_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    hk32f030xmxxa_it.o(.ARM.exidx.text.SVC_Handler) refers to hk32f030xmxxa_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    hk32f030xmxxa_it.o(.ARM.exidx.text.PendSV_Handler) refers to hk32f030xmxxa_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    hk32f030xmxxa_it.o(.ARM.exidx.text.SysTick_Handler) refers to hk32f030xmxxa_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    hk32f030xmxxa_it.o(.text.USART1_IRQHandler) refers to hk32f030xmxxa_usart.o(.text.USART_GetITStatus) for USART_GetITStatus
    hk32f030xmxxa_it.o(.text.USART1_IRQHandler) refers to hk32f030xmxxa_usart.o(.text.USART_ClearITPendingBit) for USART_ClearITPendingBit
    hk32f030xmxxa_it.o(.text.USART1_IRQHandler) refers to hk32f030xmxxa_usart.o(.text.USART_ITConfig) for USART_ITConfig
    hk32f030xmxxa_it.o(.text.USART1_IRQHandler) refers to main.o(.bss.Usart1RxBuffer) for Usart1RxBuffer
    hk32f030xmxxa_it.o(.text.USART1_IRQHandler) refers to main.o(.bss.Usart1TxBuffer) for Usart1TxBuffer
    hk32f030xmxxa_it.o(.ARM.exidx.text.USART1_IRQHandler) refers to hk32f030xmxxa_it.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.USART_Config) for USART_Config
    main.o(.text.main) refers to printfa.o(i.__0sprintf) for sprintf
    main.o(.text.main) refers to main.o(.text.USART1_IT_Send) for USART1_IT_Send
    main.o(.text.main) refers to main.o(.text.USART1_IT_Receive) for USART1_IT_Receive
    main.o(.text.main) refers to main.o(.bss.Usart1TxBuffer) for Usart1TxBuffer
    main.o(.text.main) refers to main.o(.data.arr) for arr
    main.o(.text.main) refers to main.o(.data.buffer) for buffer
    main.o(.text.main) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.bss.Rx_buffer) for Rx_buffer
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.USART_Config) refers to hk32f030xmxxa_rcc.o(.text.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    main.o(.text.USART_Config) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph2ClockCmd) for RCC_APBPeriph2ClockCmd
    main.o(.text.USART_Config) refers to hk32f030xmxxa_gpio.o(.text.GPIO_PinAFConfig) for GPIO_PinAFConfig
    main.o(.text.USART_Config) refers to hk32f030xmxxa_gpio.o(.text.GPIO_Init) for GPIO_Init
    main.o(.text.USART_Config) refers to hk32f030xmxxa_usart.o(.text.USART_Init) for USART_Init
    main.o(.text.USART_Config) refers to hk32f030xmxxa_misc.o(.text.NVIC_Init) for NVIC_Init
    main.o(.text.USART_Config) refers to hk32f030xmxxa_usart.o(.text.USART_Cmd) for USART_Cmd
    main.o(.ARM.exidx.text.USART_Config) refers to main.o(.text.USART_Config) for [Anonymous Symbol]
    main.o(.text.USART1_IT_Send) refers to hk32f030xmxxa_usart.o(.text.USART_ITConfig) for USART_ITConfig
    main.o(.text.USART1_IT_Send) refers to main.o(.bss.Usart1TxBuffer) for Usart1TxBuffer
    main.o(.ARM.exidx.text.USART1_IT_Send) refers to main.o(.text.USART1_IT_Send) for [Anonymous Symbol]
    main.o(.text.USART1_IT_Receive) refers to hk32f030xmxxa_usart.o(.text.USART_ITConfig) for USART_ITConfig
    main.o(.text.USART1_IT_Receive) refers to main.o(.bss.Usart1RxBuffer) for Usart1RxBuffer
    main.o(.ARM.exidx.text.USART1_IT_Receive) refers to main.o(.text.USART1_IT_Receive) for [Anonymous Symbol]
    hk32f030xmxxa_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetREVID) refers to hk32f030xmxxa_dbgmcu.o(.text.DBGMCU_GetREVID) for [Anonymous Symbol]
    hk32f030xmxxa_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetDEVID) refers to hk32f030xmxxa_dbgmcu.o(.text.DBGMCU_GetDEVID) for [Anonymous Symbol]
    hk32f030xmxxa_dbgmcu.o(.ARM.exidx.text.DBGMCU_Config) refers to hk32f030xmxxa_dbgmcu.o(.text.DBGMCU_Config) for [Anonymous Symbol]
    hk32f030xmxxa_dbgmcu.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig) refers to hk32f030xmxxa_dbgmcu.o(.text.DBGMCU_APB1PeriphConfig) for [Anonymous Symbol]
    hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to hk32f030xmxxa_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_Init) refers to hk32f030xmxxa_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_StructInit) refers to hk32f030xmxxa_exti.o(.text.EXTI_StructInit) for [Anonymous Symbol]
    hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt) refers to hk32f030xmxxa_exti.o(.text.EXTI_GenerateSWInterrupt) for [Anonymous Symbol]
    hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus) refers to hk32f030xmxxa_exti.o(.text.EXTI_GetFlagStatus) for [Anonymous Symbol]
    hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_GetITStatus) refers to hk32f030xmxxa_exti.o(.text.EXTI_GetITStatus) for [Anonymous Symbol]
    hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_ClearFlag) refers to hk32f030xmxxa_exti.o(.text.EXTI_ClearFlag) for [Anonymous Symbol]
    hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit) refers to hk32f030xmxxa_exti.o(.text.EXTI_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_SetLatency) refers to hk32f030xmxxa_flash.o(.text.FLASH_SetLatency) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_Unlock) refers to hk32f030xmxxa_flash.o(.text.FLASH_Unlock) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_Lock) refers to hk32f030xmxxa_flash.o(.text.FLASH_Lock) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_ErasePage) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to hk32f030xmxxa_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) refers to hk32f030xmxxa_flash.o(.text.FLASH_GetStatus) for FLASH_GetStatus
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_EraseAllPages) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_EraseAllPages) refers to hk32f030xmxxa_flash.o(.text.FLASH_EraseAllPages) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_ProgramHalfWord) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord) refers to hk32f030xmxxa_flash.o(.text.FLASH_ProgramHalfWord) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_Unlock) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_Unlock) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_Lock) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_Lock) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_OB_EraseByte) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_EraseByte) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_EraseByte) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_OB_WRPConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_WRPConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_WRPConfig) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_OB_RDPConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_RDPConfig) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_OB_UserConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_UserConfig) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_OB_IWDG_RLRConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_IWDG_RLRConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_IWDG_RLRConfig) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_OB_LSILPConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_LSILPConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_LSILPConfig) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_OB_DBGCLKConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_DBGCLKConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_DBGCLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_OB_WriteUser) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_WriteUser) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.FLASH_OB_ProgramData) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_ProgramData) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_GetUser) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_GetUser) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_GetWRP) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP) refers to hk32f030xmxxa_flash.o(.text.FLASH_OB_GetRDP) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_ITConfig) refers to hk32f030xmxxa_flash.o(.text.FLASH_ITConfig) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus) refers to hk32f030xmxxa_flash.o(.text.FLASH_GetFlagStatus) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_ClearFlag) refers to hk32f030xmxxa_flash.o(.text.FLASH_ClearFlag) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_GetStatus) refers to hk32f030xmxxa_flash.o(.text.FLASH_GetStatus) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.EEPROM_EraseByte) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.EEPROM_EraseByte) refers to hk32f030xmxxa_flash.o(.text.EEPROM_EraseByte) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.text.EEPROM_ProgramByte) refers to hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    hk32f030xmxxa_flash.o(.ARM.exidx.text.EEPROM_ProgramByte) refers to hk32f030xmxxa_flash.o(.text.EEPROM_ProgramByte) for [Anonymous Symbol]
    hk32f030xmxxa_flash.o(.ARM.exidx.text.Sys_GetDevice64BitUID) refers to hk32f030xmxxa_flash.o(.text.Sys_GetDevice64BitUID) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.text.GPIO_DeInit) refers to hk32f030xmxxa_rcc.o(.text.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to hk32f030xmxxa_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_Init) refers to hk32f030xmxxa_gpio.o(.text.GPIO_Init) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_StructInit) refers to hk32f030xmxxa_gpio.o(.text.GPIO_StructInit) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig) refers to hk32f030xmxxa_gpio.o(.text.GPIO_PinLockConfig) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit) refers to hk32f030xmxxa_gpio.o(.text.GPIO_ReadInputDataBit) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ReadInputData) refers to hk32f030xmxxa_gpio.o(.text.GPIO_ReadInputData) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit) refers to hk32f030xmxxa_gpio.o(.text.GPIO_ReadOutputDataBit) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData) refers to hk32f030xmxxa_gpio.o(.text.GPIO_ReadOutputData) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_SetBits) refers to hk32f030xmxxa_gpio.o(.text.GPIO_SetBits) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ResetBits) refers to hk32f030xmxxa_gpio.o(.text.GPIO_ResetBits) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_WriteBit) refers to hk32f030xmxxa_gpio.o(.text.GPIO_WriteBit) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_Write) refers to hk32f030xmxxa_gpio.o(.text.GPIO_Write) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_Toggle) refers to hk32f030xmxxa_gpio.o(.text.GPIO_Toggle) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig) refers to hk32f030xmxxa_gpio.o(.text.GPIO_PinAFConfig) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_IOMUX_PinAFConfig) refers to hk32f030xmxxa_gpio.o(.text.GPIO_IOMUX_PinAFConfig) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_IOMUX_ChangePin) refers to hk32f030xmxxa_gpio.o(.text.GPIO_IOMUX_ChangePin) for [Anonymous Symbol]
    hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_IOMUX_SetTIM2CN1_Source) refers to hk32f030xmxxa_gpio.o(.text.GPIO_IOMUX_SetTIM2CN1_Source) for [Anonymous Symbol]
    hk32f030xmxxa_misc.o(.ARM.exidx.text.NVIC_Init) refers to hk32f030xmxxa_misc.o(.text.NVIC_Init) for [Anonymous Symbol]
    hk32f030xmxxa_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig) refers to hk32f030xmxxa_misc.o(.text.NVIC_SystemLPConfig) for [Anonymous Symbol]
    hk32f030xmxxa_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig) refers to hk32f030xmxxa_misc.o(.text.SysTick_CLKSourceConfig) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.text.PWR_DeInit) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph1ResetCmd) for RCC_APBPeriph1ResetCmd
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_DeInit) refers to hk32f030xmxxa_pwr.o(.text.PWR_DeInit) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd) refers to hk32f030xmxxa_pwr.o(.text.PWR_BackupAccessCmd) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode) refers to hk32f030xmxxa_pwr.o(.text.PWR_EnterSleepMode) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.text.PWR_EnterStopMode) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph1ClockCmd) for RCC_APBPeriph1ClockCmd
    hk32f030xmxxa_pwr.o(.text.PWR_EnterStopMode) refers to hk32f030xmxxa_exti.o(.text.EXTI_GetFlagStatus) for EXTI_GetFlagStatus
    hk32f030xmxxa_pwr.o(.text.PWR_EnterStopMode) refers to hk32f030xmxxa_exti.o(.text.EXTI_ClearFlag) for EXTI_ClearFlag
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_EnterStopMode) refers to hk32f030xmxxa_pwr.o(.text.PWR_EnterStopMode) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.text.PWR_EnterStandbyMode) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph1ClockCmd) for RCC_APBPeriph1ClockCmd
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_EnterStandbyMode) refers to hk32f030xmxxa_pwr.o(.text.PWR_EnterStandbyMode) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus) refers to hk32f030xmxxa_pwr.o(.text.PWR_GetFlagStatus) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_ClearFlag) refers to hk32f030xmxxa_pwr.o(.text.PWR_ClearFlag) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd) refers to hk32f030xmxxa_pwr.o(.text.PWR_WakeUpPinCmd) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_WakeUpPinPolarity) refers to hk32f030xmxxa_pwr.o(.text.PWR_WakeUpPinPolarity) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_PowerDownDetect_Cmd) refers to hk32f030xmxxa_pwr.o(.text.PWR_PowerDownDetect_Cmd) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_StandbyAutoWakeupTimer_Cmd) refers to hk32f030xmxxa_pwr.o(.text.PWR_StandbyAutoWakeupTimer_Cmd) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_SetStandbyWakeupTimer) refers to hk32f030xmxxa_pwr.o(.text.PWR_SetStandbyWakeupTimer) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_StandbyMode_BKP0) refers to hk32f030xmxxa_pwr.o(.text.PWR_StandbyMode_BKP0) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_StandbyMode_BKP1) refers to hk32f030xmxxa_pwr.o(.text.PWR_StandbyMode_BKP1) for [Anonymous Symbol]
    hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_Standby_IO_KEEP) refers to hk32f030xmxxa_pwr.o(.text.PWR_Standby_IO_KEEP) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_DeInit) refers to hk32f030xmxxa_rcc.o(.text.RCC_DeInit) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.text.RCC_WaitForStartUp) refers to hk32f030xmxxa_rcc.o(.text.RCC_GetFlagStatus) for RCC_GetFlagStatus
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_WaitForStartUp) refers to hk32f030xmxxa_rcc.o(.text.RCC_WaitForStartUp) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus) refers to hk32f030xmxxa_rcc.o(.text.RCC_GetFlagStatus) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_TrimHSIValue) refers to hk32f030xmxxa_rcc.o(.text.RCC_TrimHSIValue) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue) refers to hk32f030xmxxa_rcc.o(.text.RCC_AdjustHSICalibrationValue) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_HSICmd) refers to hk32f030xmxxa_rcc.o(.text.RCC_HSICmd) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_LSICmd) refers to hk32f030xmxxa_rcc.o(.text.RCC_LSICmd) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_EXTConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_EXTConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd) refers to hk32f030xmxxa_rcc.o(.text.RCC_ClockSecuritySystemCmd) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_MCOConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_MCOConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_SYSCLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource) refers to hk32f030xmxxa_rcc.o(.text.RCC_GetSYSCLKSource) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_HCLKConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_HCLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_PCLKConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_PCLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_ADCCLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_I2CCLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_USART1CLKConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_USART1CLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_UART2CLKConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_UART2CLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_UART3CLKConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_UART3CLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_UART4CLKConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_UART4CLKConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq) refers to hk32f030xmxxa_rcc.o(.rodata.AHBPrescTable) for AHBPrescTable
    hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq) refers to hk32f030xmxxa_rcc.o(.rodata.APBPrescTable) for APBPrescTable
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq) refers to hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd) refers to hk32f030xmxxa_rcc.o(.text.RCC_AHBPeriphClockCmd) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_APBPeriph2ClockCmd) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph2ClockCmd) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_APBPeriph1ClockCmd) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph1ClockCmd) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd) refers to hk32f030xmxxa_rcc.o(.text.RCC_AHBPeriphResetCmd) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_APBPeriph2ResetCmd) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph2ResetCmd) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_APBPeriph1ResetCmd) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph1ResetCmd) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ITConfig) refers to hk32f030xmxxa_rcc.o(.text.RCC_ITConfig) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ClearFlag) refers to hk32f030xmxxa_rcc.o(.text.RCC_ClearFlag) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_GetITStatus) refers to hk32f030xmxxa_rcc.o(.text.RCC_GetITStatus) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit) refers to hk32f030xmxxa_rcc.o(.text.RCC_ClearITPendingBit) for [Anonymous Symbol]
    hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_CSS_THRESHOLD_Config) refers to hk32f030xmxxa_rcc.o(.text.RCC_CSS_THRESHOLD_Config) for [Anonymous Symbol]
    hk32f030xmxxa_syscfg.o(.text.SYSCFG_DeInit) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph2ResetCmd) for RCC_APBPeriph2ResetCmd
    hk32f030xmxxa_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit) refers to hk32f030xmxxa_syscfg.o(.text.SYSCFG_DeInit) for [Anonymous Symbol]
    hk32f030xmxxa_syscfg.o(.ARM.exidx.text.SYSCFG_Lockup_Tim1BreakConfig) refers to hk32f030xmxxa_syscfg.o(.text.SYSCFG_Lockup_Tim1BreakConfig) for [Anonymous Symbol]
    hk32f030xmxxa_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig) refers to hk32f030xmxxa_syscfg.o(.text.SYSCFG_MemoryRemapConfig) for [Anonymous Symbol]
    hk32f030xmxxa_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig) refers to hk32f030xmxxa_syscfg.o(.text.SYSCFG_EXTILineConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.text.USART_DeInit) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph2ResetCmd) for RCC_APBPeriph2ResetCmd
    hk32f030xmxxa_usart.o(.text.USART_DeInit) refers to hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph1ResetCmd) for RCC_APBPeriph1ResetCmd
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DeInit) refers to hk32f030xmxxa_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.text.USART_Init) refers to hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq) for RCC_GetClocksFreq
    hk32f030xmxxa_usart.o(.text.USART_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_Init) refers to hk32f030xmxxa_usart.o(.text.USART_Init) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_StructInit) refers to hk32f030xmxxa_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ClockInit) refers to hk32f030xmxxa_usart.o(.text.USART_ClockInit) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ClockStructInit) refers to hk32f030xmxxa_usart.o(.text.USART_ClockStructInit) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_Cmd) refers to hk32f030xmxxa_usart.o(.text.USART_Cmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DirectionModeCmd) refers to hk32f030xmxxa_usart.o(.text.USART_DirectionModeCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd) refers to hk32f030xmxxa_usart.o(.text.USART_OverSampling8Cmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd) refers to hk32f030xmxxa_usart.o(.text.USART_OneBitMethodCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_MSBFirstCmd) refers to hk32f030xmxxa_usart.o(.text.USART_MSBFirstCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DataInvCmd) refers to hk32f030xmxxa_usart.o(.text.USART_DataInvCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_InvPinCmd) refers to hk32f030xmxxa_usart.o(.text.USART_InvPinCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SWAPPinCmd) refers to hk32f030xmxxa_usart.o(.text.USART_SWAPPinCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd) refers to hk32f030xmxxa_usart.o(.text.USART_ReceiverTimeOutCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut) refers to hk32f030xmxxa_usart.o(.text.USART_SetReceiverTimeOut) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetPrescaler) refers to hk32f030xmxxa_usart.o(.text.USART_SetPrescaler) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_STOPModeCmd) refers to hk32f030xmxxa_usart.o(.text.USART_STOPModeCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_StopModeWakeUpSourceConfig) refers to hk32f030xmxxa_usart.o(.text.USART_StopModeWakeUpSourceConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd) refers to hk32f030xmxxa_usart.o(.text.USART_AutoBaudRateCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig) refers to hk32f030xmxxa_usart.o(.text.USART_AutoBaudRateConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SendData) refers to hk32f030xmxxa_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to hk32f030xmxxa_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetAddress) refers to hk32f030xmxxa_usart.o(.text.USART_SetAddress) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_MuteModeCmd) refers to hk32f030xmxxa_usart.o(.text.USART_MuteModeCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig) refers to hk32f030xmxxa_usart.o(.text.USART_MuteModeWakeUpConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig) refers to hk32f030xmxxa_usart.o(.text.USART_AddressDetectionConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig) refers to hk32f030xmxxa_usart.o(.text.USART_LINBreakDetectLengthConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_LINCmd) refers to hk32f030xmxxa_usart.o(.text.USART_LINCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd) refers to hk32f030xmxxa_usart.o(.text.USART_HalfDuplexCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to hk32f030xmxxa_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SmartCardCmd) refers to hk32f030xmxxa_usart.o(.text.USART_SmartCardCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd) refers to hk32f030xmxxa_usart.o(.text.USART_SmartCardNACKCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetAutoRetryCount) refers to hk32f030xmxxa_usart.o(.text.USART_SetAutoRetryCount) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetBlockLength) refers to hk32f030xmxxa_usart.o(.text.USART_SetBlockLength) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to hk32f030xmxxa_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to hk32f030xmxxa_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DECmd) refers to hk32f030xmxxa_usart.o(.text.USART_DECmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DEPolarityConfig) refers to hk32f030xmxxa_usart.o(.text.USART_DEPolarityConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime) refers to hk32f030xmxxa_usart.o(.text.USART_SetDEAssertionTime) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime) refers to hk32f030xmxxa_usart.o(.text.USART_SetDEDeassertionTime) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ITConfig) refers to hk32f030xmxxa_usart.o(.text.USART_ITConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_RequestCmd) refers to hk32f030xmxxa_usart.o(.text.USART_RequestCmd) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig) refers to hk32f030xmxxa_usart.o(.text.USART_OverrunDetectionConfig) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to hk32f030xmxxa_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to hk32f030xmxxa_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_GetITStatus) refers to hk32f030xmxxa_usart.o(.text.USART_GetITStatus) for [Anonymous Symbol]
    hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ClearITPendingBit) refers to hk32f030xmxxa_usart.o(.text.USART_ClearITPendingBit) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to keil_startup_hk32f030xmxxa.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to keil_startup_hk32f030xmxxa.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    fputc_h.o(i._fputc$hlt) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc_h.o(i._fputc$hlt) refers (Special) to semi.o(.text) for __semihosting_library_function
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing system_hk32f030xmxxa.o(.text), (0 bytes).
    Removing system_hk32f030xmxxa.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_hk32f030xmxxa.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_hk32f030xmxxa.o(.text.SystemCoreClockUpdate), (144 bytes).
    Removing system_hk32f030xmxxa.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_hk32f030xmxxa.o(.ARM.exidx.text.SetSysClockToHSI), (8 bytes).
    Removing system_hk32f030xmxxa.o(.data.SystemCoreClock), (4 bytes).
    Removing keil_startup_hk32f030xmxxa.o(HEAP), (512 bytes).
    Removing hk32f030xmxxa_it.o(.text), (0 bytes).
    Removing hk32f030xmxxa_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing hk32f030xmxxa_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing hk32f030xmxxa_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing hk32f030xmxxa_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing hk32f030xmxxa_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing hk32f030xmxxa_it.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.USART_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.USART1_IT_Send), (8 bytes).
    Removing main.o(.ARM.exidx.text.USART1_IT_Receive), (8 bytes).
    Removing main.o(.data.Tx_buffer), (1 bytes).
    Removing main.o(.bss.Rx_buffer1), (7 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing hk32f030xmxxa_dbgmcu.o(.text), (0 bytes).
    Removing hk32f030xmxxa_dbgmcu.o(.text.DBGMCU_GetREVID), (12 bytes).
    Removing hk32f030xmxxa_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetREVID), (8 bytes).
    Removing hk32f030xmxxa_dbgmcu.o(.text.DBGMCU_GetDEVID), (20 bytes).
    Removing hk32f030xmxxa_dbgmcu.o(.ARM.exidx.text.DBGMCU_GetDEVID), (8 bytes).
    Removing hk32f030xmxxa_dbgmcu.o(.text.DBGMCU_Config), (48 bytes).
    Removing hk32f030xmxxa_dbgmcu.o(.ARM.exidx.text.DBGMCU_Config), (8 bytes).
    Removing hk32f030xmxxa_dbgmcu.o(.text.DBGMCU_APB1PeriphConfig), (48 bytes).
    Removing hk32f030xmxxa_dbgmcu.o(.ARM.exidx.text.DBGMCU_APB1PeriphConfig), (8 bytes).
    Removing hk32f030xmxxa_exti.o(.text), (0 bytes).
    Removing hk32f030xmxxa_exti.o(.text.EXTI_DeInit), (48 bytes).
    Removing hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing hk32f030xmxxa_exti.o(.text.EXTI_Init), (204 bytes).
    Removing hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing hk32f030xmxxa_exti.o(.text.EXTI_StructInit), (28 bytes).
    Removing hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_StructInit), (8 bytes).
    Removing hk32f030xmxxa_exti.o(.text.EXTI_GenerateSWInterrupt), (24 bytes).
    Removing hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_GenerateSWInterrupt), (8 bytes).
    Removing hk32f030xmxxa_exti.o(.text.EXTI_GetFlagStatus), (52 bytes).
    Removing hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_GetFlagStatus), (8 bytes).
    Removing hk32f030xmxxa_exti.o(.text.EXTI_GetITStatus), (76 bytes).
    Removing hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_GetITStatus), (8 bytes).
    Removing hk32f030xmxxa_exti.o(.text.EXTI_ClearFlag), (20 bytes).
    Removing hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_ClearFlag), (8 bytes).
    Removing hk32f030xmxxa_exti.o(.text.EXTI_ClearITPendingBit), (20 bytes).
    Removing hk32f030xmxxa_exti.o(.ARM.exidx.text.EXTI_ClearITPendingBit), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text), (0 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_SetLatency), (44 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_SetLatency), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_Unlock), (44 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_Unlock), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_Lock), (16 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_Lock), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_ErasePage), (104 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_WaitForLastOperation), (98 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_WaitForLastOperation), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_EraseAllPages), (104 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_EraseAllPages), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_ProgramHalfWord), (96 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_ProgramHalfWord), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_Unlock), (44 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_Unlock), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_Lock), (20 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_Lock), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_EraseByte), (100 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_EraseByte), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_WRPConfig), (408 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_WRPConfig), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_RDPConfig), (280 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_RDPConfig), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_UserConfig), (280 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_UserConfig), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_IWDG_RLRConfig), (320 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_IWDG_RLRConfig), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_LSILPConfig), (260 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_LSILPConfig), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_DBGCLKConfig), (260 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_DBGCLKConfig), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_WriteUser), (108 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_WriteUser), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_ProgramData), (104 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_ProgramData), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_GetUser), (16 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_GetUser), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_GetWRP), (12 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_GetWRP), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_OB_GetRDP), (52 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_OB_GetRDP), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_ITConfig), (48 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_ITConfig), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_GetFlagStatus), (52 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_GetFlagStatus), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_ClearFlag), (20 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_ClearFlag), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.FLASH_GetStatus), (72 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.FLASH_GetStatus), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.EEPROM_EraseByte), (112 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.EEPROM_EraseByte), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.EEPROM_ProgramByte), (96 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.EEPROM_ProgramByte), (8 bytes).
    Removing hk32f030xmxxa_flash.o(.text.Sys_GetDevice64BitUID), (32 bytes).
    Removing hk32f030xmxxa_flash.o(.ARM.exidx.text.Sys_GetDevice64BitUID), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text), (0 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_DeInit), (152 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_Init), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_StructInit), (34 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_StructInit), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_PinLockConfig), (56 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_PinLockConfig), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_ReadInputDataBit), (56 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ReadInputDataBit), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_ReadInputData), (14 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ReadInputData), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_ReadOutputDataBit), (56 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ReadOutputDataBit), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_ReadOutputData), (14 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ReadOutputData), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_SetBits), (26 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_SetBits), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_ResetBits), (26 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_ResetBits), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_WriteBit), (44 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_WriteBit), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_Write), (18 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_Write), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_Toggle), (22 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_Toggle), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_PinAFConfig), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_IOMUX_PinAFConfig), (236 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_IOMUX_PinAFConfig), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_IOMUX_ChangePin), (124 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_IOMUX_ChangePin), (8 bytes).
    Removing hk32f030xmxxa_gpio.o(.text.GPIO_IOMUX_SetTIM2CN1_Source), (24 bytes).
    Removing hk32f030xmxxa_gpio.o(.ARM.exidx.text.GPIO_IOMUX_SetTIM2CN1_Source), (8 bytes).
    Removing hk32f030xmxxa_misc.o(.text), (0 bytes).
    Removing hk32f030xmxxa_misc.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing hk32f030xmxxa_misc.o(.text.NVIC_SystemLPConfig), (56 bytes).
    Removing hk32f030xmxxa_misc.o(.ARM.exidx.text.NVIC_SystemLPConfig), (8 bytes).
    Removing hk32f030xmxxa_misc.o(.text.SysTick_CLKSourceConfig), (44 bytes).
    Removing hk32f030xmxxa_misc.o(.ARM.exidx.text.SysTick_CLKSourceConfig), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text), (0 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_DeInit), (26 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_DeInit), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_BackupAccessCmd), (52 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_BackupAccessCmd), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_EnterSleepMode), (60 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_EnterSleepMode), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_EnterStopMode), (148 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_EnterStopMode), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_EnterStandbyMode), (48 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_EnterStandbyMode), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_GetFlagStatus), (52 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_GetFlagStatus), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_ClearFlag), (24 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_ClearFlag), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_WakeUpPinCmd), (52 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_WakeUpPinCmd), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_WakeUpPinPolarity), (48 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_WakeUpPinPolarity), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_PowerDownDetect_Cmd), (96 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_PowerDownDetect_Cmd), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_StandbyAutoWakeupTimer_Cmd), (52 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_StandbyAutoWakeupTimer_Cmd), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_SetStandbyWakeupTimer), (24 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_SetStandbyWakeupTimer), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_StandbyMode_BKP0), (20 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_StandbyMode_BKP0), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_StandbyMode_BKP1), (20 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_StandbyMode_BKP1), (8 bytes).
    Removing hk32f030xmxxa_pwr.o(.text.PWR_Standby_IO_KEEP), (84 bytes).
    Removing hk32f030xmxxa_pwr.o(.ARM.exidx.text.PWR_Standby_IO_KEEP), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text), (0 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_DeInit), (64 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_DeInit), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_WaitForStartUp), (120 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_WaitForStartUp), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_GetFlagStatus), (116 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_GetFlagStatus), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_TrimHSIValue), (48 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_TrimHSIValue), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_AdjustHSICalibrationValue), (52 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_AdjustHSICalibrationValue), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_HSICmd), (48 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_HSICmd), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_LSICmd), (48 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_LSICmd), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_EXTConfig), (80 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_EXTConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_ClockSecuritySystemCmd), (52 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ClockSecuritySystemCmd), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_MCOConfig), (56 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_MCOConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_SYSCLKConfig), (168 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_SYSCLKConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_GetSYSCLKSource), (16 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_GetSYSCLKSource), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_HCLKConfig), (44 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_HCLKConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_PCLKConfig), (44 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_PCLKConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_ADCCLKConfig), (88 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ADCCLKConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_I2CCLKConfig), (32 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_I2CCLKConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_USART1CLKConfig), (32 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_USART1CLKConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_UART2CLKConfig), (32 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_UART2CLKConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_UART3CLKConfig), (32 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_UART3CLKConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_UART4CLKConfig), (32 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_UART4CLKConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_GetClocksFreq), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_AHBPeriphClockCmd), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_APBPeriph2ClockCmd), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph1ClockCmd), (48 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_APBPeriph1ClockCmd), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_AHBPeriphResetCmd), (48 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_AHBPeriphResetCmd), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph2ResetCmd), (48 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_APBPeriph2ResetCmd), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph1ResetCmd), (48 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_APBPeriph1ResetCmd), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_ITConfig), (52 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ITConfig), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_ClearFlag), (20 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ClearFlag), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_GetITStatus), (52 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_GetITStatus), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_ClearITPendingBit), (20 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_ClearITPendingBit), (8 bytes).
    Removing hk32f030xmxxa_rcc.o(.text.RCC_CSS_THRESHOLD_Config), (48 bytes).
    Removing hk32f030xmxxa_rcc.o(.ARM.exidx.text.RCC_CSS_THRESHOLD_Config), (8 bytes).
    Removing hk32f030xmxxa_syscfg.o(.text), (0 bytes).
    Removing hk32f030xmxxa_syscfg.o(.text.SYSCFG_DeInit), (26 bytes).
    Removing hk32f030xmxxa_syscfg.o(.ARM.exidx.text.SYSCFG_DeInit), (8 bytes).
    Removing hk32f030xmxxa_syscfg.o(.text.SYSCFG_Lockup_Tim1BreakConfig), (52 bytes).
    Removing hk32f030xmxxa_syscfg.o(.ARM.exidx.text.SYSCFG_Lockup_Tim1BreakConfig), (8 bytes).
    Removing hk32f030xmxxa_syscfg.o(.text.SYSCFG_MemoryRemapConfig), (56 bytes).
    Removing hk32f030xmxxa_syscfg.o(.ARM.exidx.text.SYSCFG_MemoryRemapConfig), (8 bytes).
    Removing hk32f030xmxxa_syscfg.o(.text.SYSCFG_EXTILineConfig), (124 bytes).
    Removing hk32f030xmxxa_syscfg.o(.ARM.exidx.text.SYSCFG_EXTILineConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text), (0 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_DeInit), (136 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_StructInit), (36 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_ClockInit), (58 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ClockInit), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_ClockStructInit), (26 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ClockStructInit), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_Cmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_DirectionModeCmd), (46 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DirectionModeCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_OverSampling8Cmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_OverSampling8Cmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_OneBitMethodCmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_OneBitMethodCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_MSBFirstCmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_MSBFirstCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_DataInvCmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DataInvCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_InvPinCmd), (46 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_InvPinCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SWAPPinCmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SWAPPinCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_ReceiverTimeOutCmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ReceiverTimeOutCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SetReceiverTimeOut), (32 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetReceiverTimeOut), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SetPrescaler), (34 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetPrescaler), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_STOPModeCmd), (44 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_STOPModeCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_StopModeWakeUpSourceConfig), (32 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_StopModeWakeUpSourceConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_AutoBaudRateCmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_AutoBaudRateCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_AutoBaudRateConfig), (32 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_AutoBaudRateConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SendData), (28 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_ReceiveData), (20 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SetAddress), (36 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetAddress), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_MuteModeCmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_MuteModeCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_MuteModeWakeUpConfig), (32 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_MuteModeWakeUpConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_AddressDetectionConfig), (30 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_AddressDetectionConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_LINBreakDetectLengthConfig), (30 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_LINBreakDetectLengthConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_LINCmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_LINCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_HalfDuplexCmd), (44 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_HalfDuplexCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SetGuardTime), (34 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SmartCardCmd), (44 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SmartCardCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SmartCardNACKCmd), (44 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SmartCardNACKCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SetAutoRetryCount), (36 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetAutoRetryCount), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SetBlockLength), (36 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetBlockLength), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_IrDAConfig), (30 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_IrDACmd), (44 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_DECmd), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DECmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_DEPolarityConfig), (32 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_DEPolarityConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SetDEAssertionTime), (34 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetDEAssertionTime), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_SetDEDeassertionTime), (34 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_SetDEDeassertionTime), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ITConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_RequestCmd), (46 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_RequestCmd), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_OverrunDetectionConfig), (32 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_OverrunDetectionConfig), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_GetFlagStatus), (48 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.text.USART_ClearFlag), (16 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_GetITStatus), (8 bytes).
    Removing hk32f030xmxxa_usart.o(.ARM.exidx.text.USART_ClearITPendingBit), (8 bytes).

337 unused section(s) (total 11236 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc_h.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\..\..\..\..\Libraries\CMSIS\HK32F030xMxxA\Source\ARM\KEIL_Startup_hk32f030xmxxa.s 0x00000000   Number         0  keil_startup_hk32f030xmxxa.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    hk32f030xmxxa_dbgmcu.c                   0x00000000   Number         0  hk32f030xmxxa_dbgmcu.o ABSOLUTE
    hk32f030xmxxa_exti.c                     0x00000000   Number         0  hk32f030xmxxa_exti.o ABSOLUTE
    hk32f030xmxxa_flash.c                    0x00000000   Number         0  hk32f030xmxxa_flash.o ABSOLUTE
    hk32f030xmxxa_gpio.c                     0x00000000   Number         0  hk32f030xmxxa_gpio.o ABSOLUTE
    hk32f030xmxxa_it.c                       0x00000000   Number         0  hk32f030xmxxa_it.o ABSOLUTE
    hk32f030xmxxa_misc.c                     0x00000000   Number         0  hk32f030xmxxa_misc.o ABSOLUTE
    hk32f030xmxxa_pwr.c                      0x00000000   Number         0  hk32f030xmxxa_pwr.o ABSOLUTE
    hk32f030xmxxa_rcc.c                      0x00000000   Number         0  hk32f030xmxxa_rcc.o ABSOLUTE
    hk32f030xmxxa_syscfg.c                   0x00000000   Number         0  hk32f030xmxxa_syscfg.o ABSOLUTE
    hk32f030xmxxa_usart.c                    0x00000000   Number         0  hk32f030xmxxa_usart.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    system_hk32f030xmxxa.c                   0x00000000   Number         0  system_hk32f030xmxxa.o ABSOLUTE
    RESET                                    0x08000000   Section      192  keil_startup_hk32f030xmxxa.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       28  keil_startup_hk32f030xmxxa.o(.text)
    .text                                    0x080000f0   Section        0  uidiv_div0.o(.text)
    .text                                    0x0800012e   Section        0  uldiv.o(.text)
    .text                                    0x0800018e   Section        0  iusefp.o(.text)
    .text                                    0x08000190   Section        0  dadd.o(.text)
    .text                                    0x080002f4   Section        0  dmul.o(.text)
    .text                                    0x080003c4   Section        0  ddiv.o(.text)
    .text                                    0x080004b4   Section        0  dfixul.o(.text)
    .text                                    0x080004f4   Section       40  cdrcmple.o(.text)
    .text                                    0x0800051c   Section       36  init.o(.text)
    .text                                    0x08000540   Section        0  llshl.o(.text)
    .text                                    0x08000560   Section        0  llushr.o(.text)
    .text                                    0x08000582   Section        0  llsshr.o(.text)
    .text                                    0x080005a8   Section        0  depilogue.o(.text)
    [Anonymous Symbol]                       0x08000666   Section        0  hk32f030xmxxa_gpio.o(.text.GPIO_Init)
    [Anonymous Symbol]                       0x08000772   Section        0  hk32f030xmxxa_gpio.o(.text.GPIO_PinAFConfig)
    [Anonymous Symbol]                       0x080007b6   Section        0  hk32f030xmxxa_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x080007ba   Section        0  hk32f030xmxxa_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x080007bc   Section        0  hk32f030xmxxa_misc.o(.text.NVIC_Init)
    __arm_cp.0_0                             0x0800083c   Number         4  hk32f030xmxxa_misc.o(.text.NVIC_Init)
    __arm_cp.0_1                             0x08000840   Number         4  hk32f030xmxxa_misc.o(.text.NVIC_Init)
    __arm_cp.0_2                             0x08000844   Number         4  hk32f030xmxxa_misc.o(.text.NVIC_Init)
    __arm_cp.0_3                             0x08000848   Number         4  hk32f030xmxxa_misc.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x0800084c   Section        0  hk32f030xmxxa_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08000850   Section        0  hk32f030xmxxa_rcc.o(.text.RCC_AHBPeriphClockCmd)
    __arm_cp.21_0                            0x0800087c   Number         4  hk32f030xmxxa_rcc.o(.text.RCC_AHBPeriphClockCmd)
    [Anonymous Symbol]                       0x08000880   Section        0  hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph2ClockCmd)
    __arm_cp.22_0                            0x080008ac   Number         4  hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph2ClockCmd)
    [Anonymous Symbol]                       0x080008b0   Section        0  hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_0                            0x08000b64   Number         4  hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_1                            0x08000b68   Number         4  hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_2                            0x08000b6c   Number         4  hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_3                            0x08000b70   Number         4  hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_4                            0x08000b74   Number         4  hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq)
    __arm_cp.20_6                            0x08000b78   Number         4  hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq)
    [Anonymous Symbol]                       0x08000b7c   Section        0  hk32f030xmxxa_it.o(.text.SVC_Handler)
    SetSysClock                              0x08000b81   Thumb Code   172  system_hk32f030xmxxa.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08000b80   Section        0  system_hk32f030xmxxa.o(.text.SetSysClock)
    __arm_cp.1_0                             0x08000c2c   Number         4  system_hk32f030xmxxa.o(.text.SetSysClock)
    __arm_cp.1_1                             0x08000c30   Number         4  system_hk32f030xmxxa.o(.text.SetSysClock)
    __arm_cp.1_3                             0x08000c34   Number         4  system_hk32f030xmxxa.o(.text.SetSysClock)
    __arm_cp.1_4                             0x08000c38   Number         4  system_hk32f030xmxxa.o(.text.SetSysClock)
    __arm_cp.1_5                             0x08000c3c   Number         4  system_hk32f030xmxxa.o(.text.SetSysClock)
    __arm_cp.1_6                             0x08000c40   Number         4  system_hk32f030xmxxa.o(.text.SetSysClock)
    __arm_cp.1_7                             0x08000c44   Number         4  system_hk32f030xmxxa.o(.text.SetSysClock)
    __arm_cp.1_8                             0x08000c48   Number         4  system_hk32f030xmxxa.o(.text.SetSysClock)
    SetSysClockToHSI                         0x08000c4d   Thumb Code   228  system_hk32f030xmxxa.o(.text.SetSysClockToHSI)
    [Anonymous Symbol]                       0x08000c4c   Section        0  system_hk32f030xmxxa.o(.text.SetSysClockToHSI)
    __arm_cp.3_1                             0x08000d30   Number         4  system_hk32f030xmxxa.o(.text.SetSysClockToHSI)
    __arm_cp.3_2                             0x08000d34   Number         4  system_hk32f030xmxxa.o(.text.SetSysClockToHSI)
    __arm_cp.3_3                             0x08000d38   Number         4  system_hk32f030xmxxa.o(.text.SetSysClockToHSI)
    [Anonymous Symbol]                       0x08000d3c   Section        0  hk32f030xmxxa_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08000d40   Section        0  system_hk32f030xmxxa.o(.text.SystemInit)
    __arm_cp.0_0                             0x08000d78   Number         4  system_hk32f030xmxxa.o(.text.SystemInit)
    __arm_cp.0_1                             0x08000d7c   Number         4  system_hk32f030xmxxa.o(.text.SystemInit)
    __arm_cp.0_2                             0x08000d80   Number         4  system_hk32f030xmxxa.o(.text.SystemInit)
    __arm_cp.0_3                             0x08000d84   Number         4  system_hk32f030xmxxa.o(.text.SystemInit)
    __arm_cp.0_4                             0x08000d88   Number         4  system_hk32f030xmxxa.o(.text.SystemInit)
    __arm_cp.0_5                             0x08000d8c   Number         4  system_hk32f030xmxxa.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000d90   Section        0  hk32f030xmxxa_it.o(.text.USART1_IRQHandler)
    __arm_cp.5_4                             0x08000e88   Number         4  hk32f030xmxxa_it.o(.text.USART1_IRQHandler)
    __arm_cp.5_8                             0x08000e8c   Number         4  hk32f030xmxxa_it.o(.text.USART1_IRQHandler)
    USART1_IT_Receive                        0x08000e91   Thumb Code   104  main.o(.text.USART1_IT_Receive)
    [Anonymous Symbol]                       0x08000e90   Section        0  main.o(.text.USART1_IT_Receive)
    __arm_cp.3_0                             0x08000ef8   Number         4  main.o(.text.USART1_IT_Receive)
    __arm_cp.3_4                             0x08000efc   Number         4  main.o(.text.USART1_IT_Receive)
    USART1_IT_Send                           0x08000f01   Thumb Code   108  main.o(.text.USART1_IT_Send)
    [Anonymous Symbol]                       0x08000f00   Section        0  main.o(.text.USART1_IT_Send)
    __arm_cp.2_0                             0x08000f6c   Number         4  main.o(.text.USART1_IT_Send)
    __arm_cp.2_1                             0x08000f70   Number         4  main.o(.text.USART1_IT_Send)
    __arm_cp.2_2                             0x08000f74   Number         4  main.o(.text.USART1_IT_Send)
    __arm_cp.2_4                             0x08000f78   Number         4  main.o(.text.USART1_IT_Send)
    __arm_cp.2_5                             0x08000f7c   Number         4  main.o(.text.USART1_IT_Send)
    [Anonymous Symbol]                       0x08000f80   Section        0  hk32f030xmxxa_usart.o(.text.USART_ClearITPendingBit)
    [Anonymous Symbol]                       0x08000fa4   Section        0  hk32f030xmxxa_usart.o(.text.USART_Cmd)
    USART_Config                             0x08000fd1   Thumb Code   152  main.o(.text.USART_Config)
    [Anonymous Symbol]                       0x08000fd0   Section        0  main.o(.text.USART_Config)
    __arm_cp.1_0                             0x08001068   Number         4  main.o(.text.USART_Config)
    __arm_cp.1_1                             0x0800106c   Number         4  main.o(.text.USART_Config)
    [Anonymous Symbol]                       0x08001070   Section        0  hk32f030xmxxa_usart.o(.text.USART_GetITStatus)
    [Anonymous Symbol]                       0x0800110a   Section        0  hk32f030xmxxa_usart.o(.text.USART_ITConfig)
    [Anonymous Symbol]                       0x08001180   Section        0  hk32f030xmxxa_usart.o(.text.USART_Init)
    __arm_cp.1_0                             0x08001298   Number         4  hk32f030xmxxa_usart.o(.text.USART_Init)
    __arm_cp.1_1                             0x0800129c   Number         4  hk32f030xmxxa_usart.o(.text.USART_Init)
    __arm_cp.1_2                             0x080012a0   Number         4  hk32f030xmxxa_usart.o(.text.USART_Init)
    __arm_cp.1_3                             0x080012a4   Number         4  hk32f030xmxxa_usart.o(.text.USART_Init)
    [Anonymous Symbol]                       0x080012a8   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x08001328   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x0800132c   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x08001330   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x08001334   Number         4  main.o(.text.main)
    __arm_cp.0_4                             0x08001338   Number         4  main.o(.text.main)
    __arm_cp.0_5                             0x0800133c   Number         4  main.o(.text.main)
    __arm_cp.0_6                             0x08001340   Number         4  main.o(.text.main)
    i.__0sprintf                             0x08001344   Section        0  printfa.o(i.__0sprintf)
    i.__ARM_clz                              0x0800136c   Section        0  depilogue.o(i.__ARM_clz)
    i.__scatterload_copy                     0x0800139a   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x080013a8   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x080013aa   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x080013b9   Thumb Code   344  printfa.o(i._fp_digits)
    i._fp_digits                             0x080013b8   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x0800152d   Thumb Code  1754  printfa.o(i._printf_core)
    i._printf_core                           0x0800152c   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x08001c19   Thumb Code    32  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x08001c18   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x08001c39   Thumb Code    44  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x08001c38   Section        0  printfa.o(i._printf_pre_padding)
    _sputc                                   0x08001c65   Thumb Code    10  printfa.o(i._sputc)
    i._sputc                                 0x08001c64   Section        0  printfa.o(i._sputc)
    [Anonymous Symbol]                       0x08001c96   Section        0  main.o(.rodata.str1.1)
    STACK                                    0x20000570   Section      512  keil_startup_hk32f030xmxxa.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  keil_startup_hk32f030xmxxa.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  keil_startup_hk32f030xmxxa.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  keil_startup_hk32f030xmxxa.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code     8  keil_startup_hk32f030xmxxa.o(.text)
    ADC1_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    EXTI0_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    EXTI11_IRQHandler                        0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    EXTI1_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    EXTI2_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    EXTI3_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    EXTI4_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    EXTI5_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    EXTI6_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    EXTI7_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    FLASH_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    I2C1_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    RCC_IRQHandler                           0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    SPI1_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    TIM1_BRK_IRQHandler                      0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    TIM1_CC_IRQHandler                       0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    TIM1_UP_TRG_COM_IRQHandler               0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    TIM2_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    TIM6_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    UART2_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    UART3_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    UART4_IRQHandler                         0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    WWDG_IRQHandler                          0x080000e7   Thumb Code     0  keil_startup_hk32f030xmxxa.o(.text)
    __aeabi_uidiv                            0x080000f1   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x080000f1   Thumb Code    62  uidiv_div0.o(.text)
    __aeabi_uldivmod                         0x0800012f   Thumb Code    96  uldiv.o(.text)
    __I$use$fp                               0x0800018f   Thumb Code     0  iusefp.o(.text)
    __aeabi_dadd                             0x08000191   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x080002d9   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x080002e5   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x080002f5   Thumb Code   202  dmul.o(.text)
    __aeabi_ddiv                             0x080003c5   Thumb Code   234  ddiv.o(.text)
    __aeabi_d2ulz                            0x080004b5   Thumb Code    54  dfixul.o(.text)
    __aeabi_cdrcmple                         0x080004f5   Thumb Code    38  cdrcmple.o(.text)
    __scatterload                            0x0800051d   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x0800051d   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x08000541   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x08000541   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x08000561   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x08000561   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x08000583   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x08000583   Thumb Code     0  llsshr.o(.text)
    _double_round                            0x080005a9   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x080005c3   Thumb Code   164  depilogue.o(.text)
    GPIO_Init                                0x08000667   Thumb Code   268  hk32f030xmxxa_gpio.o(.text.GPIO_Init)
    GPIO_PinAFConfig                         0x08000773   Thumb Code    68  hk32f030xmxxa_gpio.o(.text.GPIO_PinAFConfig)
    HardFault_Handler                        0x080007b7   Thumb Code     4  hk32f030xmxxa_it.o(.text.HardFault_Handler)
    NMI_Handler                              0x080007bb   Thumb Code     2  hk32f030xmxxa_it.o(.text.NMI_Handler)
    NVIC_Init                                0x080007bd   Thumb Code   128  hk32f030xmxxa_misc.o(.text.NVIC_Init)
    PendSV_Handler                           0x0800084d   Thumb Code     2  hk32f030xmxxa_it.o(.text.PendSV_Handler)
    RCC_AHBPeriphClockCmd                    0x08000851   Thumb Code    44  hk32f030xmxxa_rcc.o(.text.RCC_AHBPeriphClockCmd)
    RCC_APBPeriph2ClockCmd                   0x08000881   Thumb Code    44  hk32f030xmxxa_rcc.o(.text.RCC_APBPeriph2ClockCmd)
    RCC_GetClocksFreq                        0x080008b1   Thumb Code   692  hk32f030xmxxa_rcc.o(.text.RCC_GetClocksFreq)
    SVC_Handler                              0x08000b7d   Thumb Code     2  hk32f030xmxxa_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x08000d3d   Thumb Code     2  hk32f030xmxxa_it.o(.text.SysTick_Handler)
    SystemInit                               0x08000d41   Thumb Code    56  system_hk32f030xmxxa.o(.text.SystemInit)
    USART1_IRQHandler                        0x08000d91   Thumb Code   248  hk32f030xmxxa_it.o(.text.USART1_IRQHandler)
    USART_ClearITPendingBit                  0x08000f81   Thumb Code    36  hk32f030xmxxa_usart.o(.text.USART_ClearITPendingBit)
    USART_Cmd                                0x08000fa5   Thumb Code    44  hk32f030xmxxa_usart.o(.text.USART_Cmd)
    USART_GetITStatus                        0x08001071   Thumb Code   154  hk32f030xmxxa_usart.o(.text.USART_GetITStatus)
    USART_ITConfig                           0x0800110b   Thumb Code   116  hk32f030xmxxa_usart.o(.text.USART_ITConfig)
    USART_Init                               0x08001181   Thumb Code   280  hk32f030xmxxa_usart.o(.text.USART_Init)
    main                                     0x080012a9   Thumb Code   128  main.o(.text.main)
    __0sprintf                               0x08001345   Thumb Code    36  printfa.o(i.__0sprintf)
    __1sprintf                               0x08001345   Thumb Code     0  printfa.o(i.__0sprintf)
    __2sprintf                               0x08001345   Thumb Code     0  printfa.o(i.__0sprintf)
    __c89sprintf                             0x08001345   Thumb Code     0  printfa.o(i.__0sprintf)
    sprintf                                  0x08001345   Thumb Code     0  printfa.o(i.__0sprintf)
    __ARM_clz                                0x0800136d   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __scatterload_copy                       0x0800139b   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x080013a9   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x080013ab   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    AHBPrescTable                            0x08001c6e   Data          32  hk32f030xmxxa_rcc.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x08001c8e   Data           8  hk32f030xmxxa_rcc.o(.rodata.APBPrescTable)
    Region$$Table$$Base                      0x08001cc8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08001ce8   Number         0  anon$$obj.o(Region$$Table)
    arr                                      0x20000000   Data          40  main.o(.data.arr)
    buffer                                   0x20000028   Data         120  main.o(.data.buffer)
    Rx_buffer                                0x200000a0   Data         200  main.o(.bss.Rx_buffer)
    Usart1RxBuffer                           0x20000168   Data         515  main.o(.bss.Usart1RxBuffer)
    Usart1TxBuffer                           0x2000036b   Data         515  main.o(.bss.Usart1TxBuffer)
    __initial_sp                             0x20000770   Data           0  keil_startup_hk32f030xmxxa.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00001d88, Max: 0x00008000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00001ce8, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO           19    RESET               keil_startup_hk32f030xmxxa.o
    0x080000c0   0x080000c0   0x00000000   Code   RO          450  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO          485    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO          488    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          490    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          492    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO          493    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          495    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          497    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO          486    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x0000001c   Code   RO           20    .text               keil_startup_hk32f030xmxxa.o
    0x080000f0   0x080000f0   0x0000003e   Code   RO          506    .text               mc_p.l(uidiv_div0.o)
    0x0800012e   0x0800012e   0x00000060   Code   RO          512    .text               mc_p.l(uldiv.o)
    0x0800018e   0x0800018e   0x00000000   Code   RO          514    .text               mc_p.l(iusefp.o)
    0x0800018e   0x0800018e   0x00000002   PAD
    0x08000190   0x08000190   0x00000164   Code   RO          515    .text               mf_p.l(dadd.o)
    0x080002f4   0x080002f4   0x000000d0   Code   RO          517    .text               mf_p.l(dmul.o)
    0x080003c4   0x080003c4   0x000000f0   Code   RO          519    .text               mf_p.l(ddiv.o)
    0x080004b4   0x080004b4   0x00000040   Code   RO          521    .text               mf_p.l(dfixul.o)
    0x080004f4   0x080004f4   0x00000028   Code   RO          523    .text               mf_p.l(cdrcmple.o)
    0x0800051c   0x0800051c   0x00000024   Code   RO          525    .text               mc_p.l(init.o)
    0x08000540   0x08000540   0x00000020   Code   RO          528    .text               mc_p.l(llshl.o)
    0x08000560   0x08000560   0x00000022   Code   RO          530    .text               mc_p.l(llushr.o)
    0x08000582   0x08000582   0x00000026   Code   RO          532    .text               mc_p.l(llsshr.o)
    0x080005a8   0x080005a8   0x000000be   Code   RO          535    .text               mf_p.l(depilogue.o)
    0x08000666   0x08000666   0x0000010c   Code   RO          173    .text.GPIO_Init     hk32f030xmxxa_gpio.o
    0x08000772   0x08000772   0x00000044   Code   RO          197    .text.GPIO_PinAFConfig  hk32f030xmxxa_gpio.o
    0x080007b6   0x080007b6   0x00000004   Code   RO           29    .text.HardFault_Handler  hk32f030xmxxa_it.o
    0x080007ba   0x080007ba   0x00000002   Code   RO           27    .text.NMI_Handler   hk32f030xmxxa_it.o
    0x080007bc   0x080007bc   0x00000090   Code   RO          212    .text.NVIC_Init     hk32f030xmxxa_misc.o
    0x0800084c   0x0800084c   0x00000002   Code   RO           33    .text.PendSV_Handler  hk32f030xmxxa_it.o
    0x0800084e   0x0800084e   0x00000002   PAD
    0x08000850   0x08000850   0x00000030   Code   RO          304    .text.RCC_AHBPeriphClockCmd  hk32f030xmxxa_rcc.o
    0x08000880   0x08000880   0x00000030   Code   RO          306    .text.RCC_APBPeriph2ClockCmd  hk32f030xmxxa_rcc.o
    0x080008b0   0x080008b0   0x000002cc   Code   RO          302    .text.RCC_GetClocksFreq  hk32f030xmxxa_rcc.o
    0x08000b7c   0x08000b7c   0x00000002   Code   RO           31    .text.SVC_Handler   hk32f030xmxxa_it.o
    0x08000b7e   0x08000b7e   0x00000002   PAD
    0x08000b80   0x08000b80   0x000000cc   Code   RO            4    .text.SetSysClock   system_hk32f030xmxxa.o
    0x08000c4c   0x08000c4c   0x000000f0   Code   RO            8    .text.SetSysClockToHSI  system_hk32f030xmxxa.o
    0x08000d3c   0x08000d3c   0x00000002   Code   RO           35    .text.SysTick_Handler  hk32f030xmxxa_it.o
    0x08000d3e   0x08000d3e   0x00000002   PAD
    0x08000d40   0x08000d40   0x00000050   Code   RO            2    .text.SystemInit    system_hk32f030xmxxa.o
    0x08000d90   0x08000d90   0x00000100   Code   RO           37    .text.USART1_IRQHandler  hk32f030xmxxa_it.o
    0x08000e90   0x08000e90   0x00000070   Code   RO           52    .text.USART1_IT_Receive  main.o
    0x08000f00   0x08000f00   0x00000080   Code   RO           50    .text.USART1_IT_Send  main.o
    0x08000f80   0x08000f80   0x00000024   Code   RO          442    .text.USART_ClearITPendingBit  hk32f030xmxxa_usart.o
    0x08000fa4   0x08000fa4   0x0000002c   Code   RO          360    .text.USART_Cmd     hk32f030xmxxa_usart.o
    0x08000fd0   0x08000fd0   0x000000a0   Code   RO           48    .text.USART_Config  main.o
    0x08001070   0x08001070   0x0000009a   Code   RO          440    .text.USART_GetITStatus  hk32f030xmxxa_usart.o
    0x0800110a   0x0800110a   0x00000074   Code   RO          430    .text.USART_ITConfig  hk32f030xmxxa_usart.o
    0x0800117e   0x0800117e   0x00000002   PAD
    0x08001180   0x08001180   0x00000128   Code   RO          352    .text.USART_Init    hk32f030xmxxa_usart.o
    0x080012a8   0x080012a8   0x0000009c   Code   RO           46    .text.main          main.o
    0x08001344   0x08001344   0x00000028   Code   RO          460    i.__0sprintf        mc_p.l(printfa.o)
    0x0800136c   0x0800136c   0x0000002e   Code   RO          537    i.__ARM_clz         mf_p.l(depilogue.o)
    0x0800139a   0x0800139a   0x0000000e   Code   RO          541    i.__scatterload_copy  mc_p.l(handlers.o)
    0x080013a8   0x080013a8   0x00000002   Code   RO          542    i.__scatterload_null  mc_p.l(handlers.o)
    0x080013aa   0x080013aa   0x0000000e   Code   RO          543    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x080013b8   0x080013b8   0x00000174   Code   RO          465    i._fp_digits        mc_p.l(printfa.o)
    0x0800152c   0x0800152c   0x000006ec   Code   RO          466    i._printf_core      mc_p.l(printfa.o)
    0x08001c18   0x08001c18   0x00000020   Code   RO          467    i._printf_post_padding  mc_p.l(printfa.o)
    0x08001c38   0x08001c38   0x0000002c   Code   RO          468    i._printf_pre_padding  mc_p.l(printfa.o)
    0x08001c64   0x08001c64   0x0000000a   Code   RO          470    i._sputc            mc_p.l(printfa.o)
    0x08001c6e   0x08001c6e   0x00000020   Data   RO          326    .rodata.AHBPrescTable  hk32f030xmxxa_rcc.o
    0x08001c8e   0x08001c8e   0x00000008   Data   RO          327    .rodata.APBPrescTable  hk32f030xmxxa_rcc.o
    0x08001c96   0x08001c96   0x00000032   Data   RO           58    .rodata.str1.1      main.o
    0x08001cc8   0x08001cc8   0x00000020   Data   RO          540    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08001ce8, Size: 0x00000770, Max: 0x00001000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08001ce8   0x00000028   Data   RW           54    .data.arr           main.o
    0x20000028   0x08001d10   0x00000078   Data   RW           55    .data.buffer        main.o
    0x200000a0        -       0x000000c8   Zero   RW           59    .bss.Rx_buffer      main.o
    0x20000168        -       0x00000203   Zero   RW           60    .bss.Usart1RxBuffer  main.o
    0x2000036b        -       0x00000203   Zero   RW           57    .bss.Usart1TxBuffer  main.o
    0x2000056e   0x08001d88   0x00000002   PAD
    0x20000570        -       0x00000200   Zero   RW           17    STACK               keil_startup_hk32f030xmxxa.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       336          0          0          0          0       6164   hk32f030xmxxa_gpio.o
       268          8          0          0          0       1658   hk32f030xmxxa_it.o
       144         16          0          0          0       2483   hk32f030xmxxa_misc.o
       812         32         40          0          0       8870   hk32f030xmxxa_rcc.o
       646         16          0          0          0      10234   hk32f030xmxxa_usart.o
        28          8        192          0        512        812   keil_startup_hk32f030xmxxa.o
       556         64         50        160       1230       4537   main.o
       524         68          0          0          0       2975   system_hk32f030xmxxa.o

    ----------------------------------------------------------------------
      3322        212        314        160       1744      37733   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0          0          2          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
      2270         94          0          0          0        472   printfa.o
        62          0          0          0          0         72   uidiv_div0.o
        96          0          0          0          0         84   uldiv.o
        40          2          0          0          0         68   cdrcmple.o
       356          4          0          0          0        140   dadd.o
       240          6          0          0          0         84   ddiv.o
       236          0          0          0          0        216   depilogue.o
        64         10          0          0          0         68   dfixul.o
       208          6          0          0          0         88   dmul.o

    ----------------------------------------------------------------------
      3764        138          0          0          0       1564   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      2618        110          0          0          0        900   mc_p.l
      1144         28          0          0          0        664   mf_p.l

    ----------------------------------------------------------------------
      3764        138          0          0          0       1564   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7086        350        314        160       1744      38573   Grand Totals
      7086        350        314        160       1744      38573   ELF Image Totals
      7086        350        314        160          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7400 (   7.23kB)
    Total RW  Size (RW Data + ZI Data)              1904 (   1.86kB)
    Total ROM Size (Code + RO Data + RW Data)       7560 (   7.38kB)

==============================================================================

